{"version":3,"file":"static/js/318.56267751.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Drinks.jsx"],"sourcesContent":["import {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from 'react-icons/md';\nimport { theme } from 'styles';\nimport styled from '@emotion/styled';\n\nexport const PaginWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const PaginationList = styled.ul`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n`;\n\nexport const PaginListItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nexport const ArrowBtn = styled.button`\n  transition: ${theme.animation('opacity')};\n\n  :disabled {\n    pointer-events: none;\n    opacity: 0.5;\n  }\n  :focus {\n    outline: 1px solid ${theme.colors.grayOpacity};\n  }\n`;\nconst arrowStyles = `\n  color: ${theme.colors.lightGray};\n  width: 28px;\n  height: 35px;\n  transition: ${theme.animation('color')};\n  transition: ${theme.animation('scale')};\n\n  :hover,\n  :focus {\n    color: ${theme.colors.lightGray};\n    scale: 1.5;\n  }\n`;\n\nexport const ArrowPrev = styled(MdOutlineKeyboardArrowLeft)`\n  ${arrowStyles}\n`;\n\nexport const ArrowNext = styled(MdOutlineKeyboardArrowRight)`\n  ${arrowStyles}\n`;\n\nexport const BtnItem = styled.button`\n  color: ${theme.colors.transparentLight};\n  border-radius: 50%;\n  width: 27px;\n  height: 27px;\n\n  transition: ${theme.animation('scale')};\n  transition: ${theme.animation('background-color')};\n  transition: ${theme.animation('color')};\n\n  &:hover {\n    scale: 1.2;\n    background-color: rgba(64, 112, 205, 0.2);\n    color: ${theme.colors.lightGray};\n    outline: 1px solid ${theme.colors.grayOpacity};\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &.active {\n    background-color: ${theme.colors.lightBlueLight};\n    color: ${theme.colors.lightGray};\n    :hover,\n    :focus {\n      scale: 1;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ArrowBtn,\n  ArrowNext,\n  ArrowPrev,\n  BtnItem,\n  PaginListItem,\n  PaginWrapper,\n  PaginationList,\n} from './Pagination.styled';\n\nexport const Pagination = ({\n  paginate,\n  prevPage,\n  nextPage,\n  currentPage,\n  totalPages,\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n\n  const visiblePages = [];\n  const maxVisiblePages = 8;\n  const pageRange = 4;\n\n  let startIndex = Math.max(currentPage - pageRange, 1);\n  let endIndex = Math.min(startIndex + maxVisiblePages - 1, totalPages);\n\n  const needEllipsisStart = startIndex > 1;\n  const needEllipsisEnd = endIndex < totalPages;\n\n  if (startIndex > 1) {\n    visiblePages.push(1);\n  }\n\n  if (needEllipsisStart) {\n    visiblePages.push('...');\n  }\n\n  for (let i = startIndex; i <= endIndex; i++) {\n    visiblePages.push(i);\n  }\n\n  if (needEllipsisEnd) {\n    visiblePages.push('...');\n  }\n\n  if (endIndex < totalPages) {\n    visiblePages.push(totalPages);\n  }\n\n  return (\n    <PaginWrapper>\n      {pageNumbers.length > 1 && (\n        <>\n          <ArrowBtn onClick={prevPage} disabled={currentPage === 1}>\n            <ArrowPrev disabled={currentPage === 1} />\n          </ArrowBtn>\n          <PaginationList>\n            {visiblePages.map((page, index) => (\n              <PaginListItem key={index}>\n                {page === '...' ? (\n                  <span>{page}</span>\n                ) : (\n                  <BtnItem\n                    className={page === currentPage ? 'active' : ''}\n                    onClick={() => (page !== '...' ? paginate(page) : null)}\n                  >\n                    {page}\n                  </BtnItem>\n                )}\n              </PaginListItem>\n            ))}\n          </PaginationList>\n          <ArrowBtn onClick={nextPage} disabled={currentPage === totalPages}>\n            <ArrowNext />\n          </ArrowBtn>\n        </>\n      )}\n    </PaginWrapper>\n  );\n};\n\nPagination.propTypes = {\n  paginate: PropTypes.func,\n  prevPage: PropTypes.func,\n  nextPage: PropTypes.func,\n  currentPage: PropTypes.number,\n  totalPages: PropTypes.number,\n};\n","import { EmptyAndError, Section } from 'components';\nimport { DrinkList, DrinkSearchBar } from 'components';\nimport { Pagination } from 'components/Pagination/Pagination';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchCategories,\n  fetchIngredients,\n  selectCategories,\n  selectIngredients,\n} from '../redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { getDrinks } from 'api';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\n\nconst Drinks = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [drinks, setDrinks] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [drinksPerPage, setDrinksPerPage] = useState(\n    calculatePerPage(window.innerWidth)\n  );\n\n  function calculatePerPage(windowWidth) {\n    return windowWidth < 1440 ? 10 : 9;\n  }\n  const { control, handleSubmit, getValues } = useForm({\n    defaultValues: {\n      drink: '',\n      category: '',\n      ingredients: '',\n    },\n  });\n  const categoriesList = useSelector(selectCategories.data);\n  const ingredientsList = useSelector(selectIngredients.data);\n\n  const category = searchParams.get('category') || '';\n  const drink = searchParams.get('drink') || '';\n  const ingredients = searchParams.get('ingredients') || '';\n  const limit = drinksPerPage;\n  const page = Number(searchParams.get('page')) || 1;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(fetchCategories()),\n      dispatch(fetchIngredients()),\n    ]).catch(() =>\n      toast.error('Oops... Something went wrong :( Please try again later.')\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    function handleResize() {\n      setDrinksPerPage(calculatePerPage(window.innerWidth));\n    }\n\n    setDrinksPerPage(calculatePerPage(window.innerWidth));\n    window.addEventListener('resize', handleResize);\n\n    const query = {\n      drink,\n      category,\n      ingredients,\n      limit: drinksPerPage,\n      page,\n    };\n\n    getDrinks(query)\n      .then(data => {\n        setDrinks(data.results);\n        setTotalPages(data.totalPages);\n      })\n      .catch(console.log);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [\n    category,\n    currentPage,\n    drink,\n    drinksPerPage,\n    ingredients,\n    page,\n    searchParams,\n  ]);\n\n  const updateCatQuery = query => {\n    setSearchParams({\n      drink,\n      category: query,\n      ingredients,\n      limit,\n      page: 1,\n    });\n    setCurrentPage(1);\n  };\n\n  const updateIngrQuery = query => {\n    setSearchParams({\n      drink,\n      category,\n      ingredients: query,\n      limit,\n      page: 1,\n    });\n    setCurrentPage(1);\n  };\n\n  const updateDrinkQuery = query => {\n    setSearchParams({\n      drink: query,\n      category,\n      ingredients,\n      limit,\n      page: 1,\n    });\n    setCurrentPage(1);\n  };\n\n  const updatePagination = query => {\n    setSearchParams({\n      drink,\n      category,\n      ingredients,\n      limit,\n      page: query,\n    });\n  };\n\n  const onSubmit = async () => {\n    updateDrinkQuery(getValues('drink'));\n  };\n\n  const handleCategoryChange = () => {\n    updateCatQuery(getValues('category.value'));\n  };\n\n  const handleIngredientChange = () => {\n    updateIngrQuery(getValues('ingredients.value'));\n  };\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n    updatePagination(pageNumber);\n  };\n\n  const nextPage = () => paginate(currentPage + 1);\n  const prevPage = () => paginate(currentPage - 1);\n\n  return (\n    <Section title=\"Drinks\">\n      <DrinkSearchBar\n        onSubmit={handleSubmit(onSubmit)}\n        control={control}\n        categoriesList={categoriesList}\n        ingredientsList={ingredientsList}\n        onChangeCategory={handleCategoryChange}\n        onChangeIngredient={handleIngredientChange}\n        initialCategory={searchParams.get('category')}\n        initialIngredient={searchParams.get('ingredients')}\n      />\n      {drinks.length === 0 ? (\n        <EmptyAndError\n          text={\n            \"Hmm, it seems like we haven't tasted any drinks matching your search criteria just yet. You might want to adjust your query; we've got plenty to show you!\"\n          }\n        />\n      ) : (\n        <>\n          <DrinkList drinks={drinks} />\n          <Pagination\n            paginate={paginate}\n            nextPage={nextPage}\n            prevPage={prevPage}\n            currentPage={page}\n            totalPages={totalPages}\n          />\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default Drinks;\n"],"names":["PaginWrapper","styled","PaginationList","PaginListItem","ArrowBtn","theme","arrowStyles","ArrowPrev","MdOutlineKeyboardArrowLeft","ArrowNext","MdOutlineKeyboardArrowRight","BtnItem","Pagination","paginate","prevPage","nextPage","currentPage","totalPages","pageNumbers","i","push","visiblePages","startIndex","Math","max","endIndex","min","needEllipsisStart","needEllipsisEnd","length","onClick","disabled","map","page","index","className","useSearchParams","searchParams","setSearchParams","useState","drinks","setDrinks","setTotalPages","setCurrentPage","calculatePerPage","window","innerWidth","drinksPerPage","setDrinksPerPage","windowWidth","useForm","defaultValues","drink","category","ingredients","control","handleSubmit","getValues","categoriesList","useSelector","selectCategories","ingredientsList","selectIngredients","get","limit","Number","dispatch","useDispatch","useEffect","Promise","all","fetchCategories","fetchIngredients","catch","toast","handleResize","addEventListener","query","getDrinks","then","data","results","console","log","removeEventListener","onSubmit","pageNumber","title","onChangeCategory","onChangeIngredient","initialCategory","initialIngredient","text"],"sourceRoot":""}