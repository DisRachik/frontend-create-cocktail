{"version":3,"file":"static/js/254.75fb80f3.chunk.js","mappings":"wSAEaA,E,QAAoBC,EAAAA,IAAH,+C,SCCjBC,EAAiB,SAAAC,GAC5B,OACE,SAACH,EAAD,WACE,SAAC,EAAAI,EAAD,CAAcC,KAAK,SAASC,QAAS,kBAAMH,EAAMG,SAAZ,EAArC,SAA4D,eAKjE,EC4CD,EAxCiB,WACf,OAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MAETC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA/BF,eAEFG,GAAoBF,EAAAA,EAAAA,IAAYG,EAAAA,KAEtCC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,GAAwB,CAAEV,KAAAA,EAAMW,MAAO,IACjD,GAAE,CAACT,EAAUF,IAEd,IAKMY,EAAW,mCAAG,WAAMC,GAAN,iEAClBX,GAASY,EAAAA,EAAAA,GAAqBD,IADZ,2CAAH,sDAIjB,OACE,+BACE,SAAC,KAAD,CAASE,MAAM,YAAf,SAC6B,IAA1BX,EAAeY,QACd,iCACE,SAAC,KAAD,CAAaC,MAAOb,EAAgBc,OAAQN,IAC3CL,EAAoBH,EAAeY,SAClC,SAACtB,EAAD,CAAgBI,QAhBN,WACpBG,GAAQ,SAAAkB,GAAS,OAAIA,EAAY,CAAhB,IACjBjB,GAASQ,EAAAA,EAAAA,GAAwB,CAAEV,KAAAA,EAAMW,MAAO,IACjD,QAiBO,SAAC,KAAD,CAAeS,KAAK,oDAK7B,C","sources":["components/ButtonLoadMore/ButtonLoadMore.styled.jsx","components/ButtonLoadMore/ButtonLoadMore.jsx","pages/Favorite.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoadMoreContainer = styled.div`\n  text-align: center;\n`;\n","import { StyledButton } from 'components/shared/Button/Button.styled';\nimport { LoadMoreContainer } from './ButtonLoadMore.styled';\n\nexport const ButtonLoadMore = props => {\n  return (\n    <LoadMoreContainer>\n      <StyledButton type=\"button\" onClick={() => props.onClick()}>\n        see other\n      </StyledButton>\n    </LoadMoreContainer>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Section, RecipesList, EmptyAndError } from 'components';\n\nimport {\n  getFavoriteDrinks,\n  getTotalHitsFavorite,\n} from 'redux/favorite/selectors';\n\nimport {\n  changeFavoriteStatus,\n  fetchUserFavoriteDrinks,\n} from 'redux/favorite/operations';\nimport { useEffect, useState } from 'react';\nimport { ButtonLoadMore } from 'components/ButtonLoadMore/ButtonLoadMore';\n\nconst Favorite = () => {\n  const [page, setPage] = useState(1);\n\n  const dispatch = useDispatch();\n\n  const { favoriteDrinks } = useSelector(getFavoriteDrinks);\n\n  const TotalHitsFavorite = useSelector(getTotalHitsFavorite);\n\n  useEffect(() => {\n    dispatch(fetchUserFavoriteDrinks({ page, limit: 9 }));\n  }, [dispatch, page]);\n\n  const seeMoreDrinks = () => {\n    setPage(prevState => prevState + 1);\n    dispatch(fetchUserFavoriteDrinks({ page, limit: 9 }));\n  };\n\n  const handleClick = async id => {\n    dispatch(changeFavoriteStatus(id));\n  };\n\n  return (\n    <>\n      <Section title=\"Favorites\">\n        {favoriteDrinks.length !== 0 ? (\n          <>\n            <RecipesList array={favoriteDrinks} action={handleClick} />\n            {TotalHitsFavorite > favoriteDrinks.length && (\n              <ButtonLoadMore onClick={seeMoreDrinks} />\n            )}\n          </>\n        ) : (\n          <EmptyAndError text=\"You haven`t added any favorite cocktails yet\" />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default Favorite;\n"],"names":["LoadMoreContainer","styled","ButtonLoadMore","props","S","type","onClick","useState","page","setPage","dispatch","useDispatch","favoriteDrinks","useSelector","getFavoriteDrinks","TotalHitsFavorite","getTotalHitsFavorite","useEffect","fetchUserFavoriteDrinks","limit","handleClick","id","changeFavoriteStatus","title","length","array","action","prevState","text"],"sourceRoot":""}