{"version":3,"file":"static/js/318.f4456a9b.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Drinks.jsx"],"sourcesContent":["import {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from 'react-icons/md';\nimport { theme } from 'styles';\nimport styled from '@emotion/styled';\n\nexport const PaginWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const PaginationList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 10px;\n`;\n\nexport const PaginListItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nexport const ArrowBtn = styled.button`\n  :hover,\n  :focus {\n    color: rgba(243, 243, 243, 0.6);\n    scale: 1.5;\n  }\n`;\nexport const ArrowPrev = styled(MdOutlineKeyboardArrowLeft)`\n  color: ${theme.colors.transparentLight};\n  width: 18px;\n  height: 25px;\n`;\nexport const ArrowNext = styled(MdOutlineKeyboardArrowRight)`\n  color: rgba(243, 243, 243, 0.3);\n  width: 18px;\n  height: 25px;\n`;\n\nexport const BtnItem = styled.button`\n  color: rgba(243, 243, 243, 1);\n  border-radius: 50%;\n  width: 27px;\n  height: 27px;\n  margin-bottom: 10px;\n\n  &:focus,\n  :hover {\n    scale: 1.2;\n  }\n\n  &.active {\n    background-color: rgba(64, 112, 205, 0.5);\n  }\n`;\n","import {\n  ArrowBtn,\n  ArrowNext,\n  ArrowPrev,\n  BtnItem,\n  PaginListItem,\n  PaginWrapper,\n  PaginationList,\n} from './Pagination.styled';\n\nexport const Pagination = ({\n  paginate,\n  prevPage,\n  nextPage,\n  currentPage,\n  totalPages,\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <PaginWrapper>\n      <ArrowBtn onClick={prevPage} disabled={currentPage === 1}>\n        <ArrowPrev />\n      </ArrowBtn>\n      <PaginationList>\n        {pageNumbers.map(number => (\n          <PaginListItem key={number}>\n            <BtnItem\n              className={number === currentPage ? 'active' : ''}\n              onClick={() => paginate(number)}\n            >\n              {number}\n            </BtnItem>\n          </PaginListItem>\n        ))}\n      </PaginationList>\n      <ArrowBtn onClick={nextPage} disabled={currentPage === totalPages}>\n        <ArrowNext />\n      </ArrowBtn>\n    </PaginWrapper>\n  );\n};\n","import { Section } from 'components';\nimport { DrinkList, DrinkSearchBar } from 'components';\nimport { Pagination } from 'components/Pagination/Pagination';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchCategories, selectCategories, selectIngredients } from '../redux';\nimport { fetchIngredients } from '../redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { getDrinks } from 'api';\nimport { useForm } from 'react-hook-form';\n\nconst Drinks = () => {\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n  const [drinks, setDrinks] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [drinksPerPage, setDrinksPerPage] = useState(\n    calculatePerPage(window.innerWidth)\n  );\n  function calculatePerPage(windowWidth) {\n    return windowWidth < 1440 ? 10 : 9;\n  }\n\n  const categoriesList = useSelector(selectCategories.data);\n  const ingredientsList = useSelector(selectIngredients.data);\n\n  if (categoriesList.length === 0) {\n    dispatch(fetchCategories());\n  }\n\n  if (ingredientsList.length === 0) {\n    dispatch(fetchIngredients());\n  }\n\n  const { control, handleSubmit, getValues } = useForm({\n    defaultValues: {\n      drink: '',\n      category: null,\n      ingredients: null,\n    },\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setDrinksPerPage(calculatePerPage(window.innerWidth));\n    }\n\n    setDrinksPerPage(calculatePerPage(window.innerWidth));\n    window.addEventListener('resize', handleResize);\n\n    if (searchParams.get('category')) {\n      const initialCategory = searchParams.get('category') || '';\n      const queryUrl = {\n        category: initialCategory,\n        limit: drinksPerPage,\n        page: currentPage,\n      };\n      getDrinks(queryUrl)\n        .then(data => {\n          setDrinks(data.results);\n          setTotalPages(data.totalPages);\n        })\n        .catch(console.log);\n    } else {\n      const query = {\n        category: 'Cocktail',\n        limit: drinksPerPage,\n        page: currentPage,\n      };\n      getDrinks(query).then(data => {\n        setDrinks(data.results);\n        setTotalPages(data.totalPages);\n      });\n    }\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [currentPage, drinksPerPage, searchParams]);\n\n  const getQuery = () => {\n    const formData = getValues();\n    const { drink, category, ingredients } = formData;\n    const searchValue = drink || '';\n    const categoryValue = category ? category.value : '';\n    const ingridientValue = ingredients ? ingredients.value : '';\n    const querySearch = {\n      drink: searchValue,\n      category: categoryValue,\n      ingredients: ingridientValue,\n      limit: drinksPerPage,\n      page: currentPage,\n    };\n\n    return querySearch;\n  };\n\n  const onSubmit = async () => {\n    getDrinks(getQuery()).then(data => {\n      setDrinks(data.results);\n      setTotalPages(data.totalPages);\n    });\n  };\n\n  const handleCategoryChange = () => {\n    getDrinks(getQuery()).then(data => {\n      setDrinks(data.results);\n      setTotalPages(data.totalPages);\n    });\n  };\n\n  const handleIngredientChange = () => {\n    getDrinks(getQuery()).then(data => {\n      setDrinks(data.results);\n      setTotalPages(data.totalPages);\n    });\n  };\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const nextPage = () => setCurrentPage(prev => prev + 1);\n  const prevPage = () => setCurrentPage(prev => prev - 1);\n\n  return (\n    <>\n      <Section title=\"Drinks\">\n        <DrinkSearchBar\n          onSubmit={handleSubmit(onSubmit)}\n          control={control}\n          categoriesList={categoriesList}\n          ingredientsList={ingredientsList}\n          onChangeCategory={handleCategoryChange}\n          onChangeIngredient={handleIngredientChange}\n          initialCategory={searchParams.get('category')}\n        />\n        <DrinkList drinks={drinks} />\n        <Pagination\n          paginate={paginate}\n          nextPage={nextPage}\n          prevPage={prevPage}\n          currentPage={currentPage}\n          totalPages={totalPages}\n        />\n      </Section>\n    </>\n  );\n};\n\nexport default Drinks;\n"],"names":["PaginWrapper","styled","PaginationList","PaginListItem","ArrowBtn","ArrowPrev","MdOutlineKeyboardArrowLeft","theme","ArrowNext","MdOutlineKeyboardArrowRight","BtnItem","Pagination","paginate","prevPage","nextPage","currentPage","totalPages","pageNumbers","i","push","onClick","disabled","map","number","className","dispatch","useDispatch","useSearchParams","searchParams","useState","drinks","setDrinks","setTotalPages","setCurrentPage","calculatePerPage","window","innerWidth","drinksPerPage","setDrinksPerPage","windowWidth","categoriesList","useSelector","selectCategories","ingredientsList","selectIngredients","length","fetchCategories","fetchIngredients","useForm","defaultValues","drink","category","ingredients","control","handleSubmit","getValues","useEffect","handleResize","addEventListener","get","queryUrl","limit","page","getDrinks","then","data","results","catch","console","log","query","removeEventListener","getQuery","formData","value","onSubmit","title","onChangeCategory","onChangeIngredient","initialCategory","pageNumber","prev"],"sourceRoot":""}