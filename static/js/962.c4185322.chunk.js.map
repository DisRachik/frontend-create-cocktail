{"version":3,"file":"static/js/962.c4185322.chunk.js","mappings":"qPAAaA,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,UAAUA,SAApB,EACvBC,EAAgB,SAAAF,GAAK,OAAIA,EAAMC,UAAUE,SAApB,EACrBC,EAAc,SAAAJ,GAAK,OAAIA,EAAMC,UAAUI,KAApB,E,6BC2DhC,EAlDkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACXN,GAAYO,EAAAA,EAAAA,IAAYT,GACxBI,GAAYK,EAAAA,EAAAA,IAAYN,GACxBG,GAAQG,EAAAA,EAAAA,IAAYJ,GAG1B,GAAwBK,EAAAA,EAAAA,UADJ,GACpB,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,KACV,GAAE,CAACP,IAEJ,IAAMQ,EAAW,mCAAG,WAAMC,GAAN,iEAClBT,GAASU,EAAAA,EAAAA,GAAgBD,IADP,2CAAH,sDAQXE,EAAehB,EAAUiB,MAAM,EAAGR,GAElCS,EAAclB,EAAUmB,OAAS,EAEvC,OACE,+BACE,SAAC,KAAD,CAASC,MAAM,aAAf,UACE,gCACGF,GACC,SAAC,KAAD,CAAaG,MAAOL,EAAcM,OAAQT,KAE1C,SAAC,KAAD,CAAeU,KAAK,gCAErBvB,EAAUmB,SAAWH,EAAaG,SACjC,+BACE,gBAAKK,MAAO,CAAEC,UAAW,UAAzB,UACE,SAAC,KAAD,CAAQC,KAAK,SAASC,QApBd,WACpBjB,EAAQD,EAZU,EAanB,EAkBa,SAA8C,kBAMnDP,IAAcE,IAAS,uBAAG,iCAKpC,C","sources":["redux/myRecipes/selectors.js","pages/MyRecipes.jsx"],"sourcesContent":["export const selectMyRecipes = state => state.myRecipes.myRecipes;\nexport const selectLoading = state => state.myRecipes.isLoading;\nexport const selectError = state => state.myRecipes.error;\n","import { Button, EmptyAndError, Section } from 'components';\nimport { RecipesList } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectLoading,\n  selectMyRecipes,\n} from 'redux/myRecipes/selectors';\nimport { useEffect, useState } from 'react';\nimport { deleteMyRecipes, fetchMyRecipes } from 'redux/myRecipes/operations';\n\nconst MyRecipes = () => {\n  const dispatch = useDispatch();\n  const myRecipes = useSelector(selectMyRecipes);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const imagePerRow = 3;\n  const [next, setNext] = useState(imagePerRow);\n\n  useEffect(() => {\n    dispatch(fetchMyRecipes());\n  }, [dispatch]);\n\n  const handleClick = async id => {\n    dispatch(deleteMyRecipes(id));\n  };\n\n  const seeMoreDrinks = () => {\n    setNext(next + imagePerRow);\n  };\n\n  const sliceRecipes = myRecipes.slice(0, next);\n\n  const isMyRecipes = myRecipes.length > 0;\n\n  return (\n    <>\n      <Section title=\"My recipes\">\n        <>\n          {isMyRecipes ? (\n            <RecipesList array={sliceRecipes} action={handleClick} />\n          ) : (\n            <EmptyAndError text=\"You don't have your recipes\" />\n          )}\n          {myRecipes.length !== sliceRecipes.length && (\n            <>\n              <div style={{ textAlign: 'center' }}>\n                <Button type=\"button\" onClick={seeMoreDrinks}>\n                  see other\n                </Button>\n              </div>\n            </>\n          )}\n          {isLoading && !error && <b>Request in progress...</b>}\n        </>\n      </Section>\n    </>\n  );\n};\n\nexport default MyRecipes;\n"],"names":["selectMyRecipes","state","myRecipes","selectLoading","isLoading","selectError","error","dispatch","useDispatch","useSelector","useState","next","setNext","useEffect","fetchMyRecipes","handleClick","id","deleteMyRecipes","sliceRecipes","slice","isMyRecipes","length","title","array","action","text","style","textAlign","type","onClick"],"sourceRoot":""}